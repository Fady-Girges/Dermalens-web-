plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'dev.flutter.flutter-gradle-plugin'
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

android {
    namespace "com.example.dermaleens"
    compileSdkVersion 34 // أو قم بتعيين هذا إلى القيمة التي تريدها
    ndkVersion flutter.ndkVersion

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        applicationId "com.example.dermaleens"
        minSdkVersion 22
        targetSdkVersion 33 // أو قم بتعيين هذا إلى القيمة التي تريدها
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        multiDexEnabled true // تأكد من تمكين MultiDex إذا كانت لديك مشكلة في تجاوز حدود الـ 64k
    }

    buildTypes {
        release {
            signingConfig signingConfigs.debug // استخدم توقيع الإنتاج هنا إذا كان متاحًا
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation 'com.android.support:multidex:1.0.3'
    implementation platform('com.google.firebase:firebase-bom:32.7.3')
    implementation 'com.google.firebase:firebase-analytics'
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.7.10'
}
